-- Recommended: Drop the table if it exists to ensure a clean run,
-- especially if previous attempts partially created it.
DROP TABLE IF EXISTS public.user_round_dynamic_points;

-- Create the table itself
CREATE TABLE public.user_round_dynamic_points (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID NOT NULL, -- Assuming this links to auth.users.id
    betting_round_id BIGINT NOT NULL,
    dynamic_points INTEGER NOT NULL DEFAULT 0,
    question_1_correct BOOLEAN NOT NULL DEFAULT FALSE,
    question_2_correct BOOLEAN NOT NULL DEFAULT FALSE,
    question_3_correct BOOLEAN NOT NULL DEFAULT FALSE,
    question_4_correct BOOLEAN NOT NULL DEFAULT FALSE,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    -- Foreign Key to reference Supabase authenticated users
    CONSTRAINT user_round_dynamic_points_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users (id) ON DELETE CASCADE,
    -- Foreign Key to reference your betting_rounds table
    CONSTRAINT user_round_dynamic_points_betting_round_id_fkey FOREIGN KEY (betting_round_id) REFERENCES public.betting_rounds (id) ON DELETE CASCADE,
    -- Unique constraint to ensure one record per user per round (required for ON CONFLICT)
    CONSTRAINT user_round_dynamic_points_unique_user_round UNIQUE (user_id, betting_round_id)
);

-- Add comments on table and columns for clarity
COMMENT ON TABLE public.user_round_dynamic_points IS 'Stores the calculated dynamic questionnaire points for each user per betting round.';
COMMENT ON COLUMN public.user_round_dynamic_points.dynamic_points IS 'Total dynamic points awarded to the user for this round based on season-long question predictions.';
COMMENT ON COLUMN public.user_round_dynamic_points.question_1_correct IS 'True if user correctly predicted league winner for this round\'\'s snapshot.';
COMMENT ON COLUMN public.user_round_dynamic_points.question_2_correct IS 'True if user correctly predicted top scorer for this round\'\'s snapshot.';
COMMENT ON COLUMN public.user_round_dynamic_points.question_3_correct IS 'True if user correctly predicted best goal difference for this round\'\'s snapshot.';
COMMENT ON COLUMN public.user_round_dynamic_points.question_4_correct IS 'True if user correctly predicted last place team for this round\'\'s snapshot.';

-- Trigger to automatically update 'updated_at' timestamp
-- (Ensure 'moddatetime' EXTENSION IS ENABLED IN YOUR SUPABASE PROJECT)
CREATE TRIGGER handle_updated_at
  BEFORE UPDATE ON public.user_round_dynamic_points
  FOR EACH ROW
  EXECUTE FUNCTION extensions.moddatetime (updated_at);

-- Add Indexes for performance
-- Note: The unique constraint above already creates an index on (user_id, betting_round_id)
-- so we don't need the composite index separately

-- Index on user_id for queries filtering primarily by user
CREATE INDEX IF NOT EXISTS idx_user_round_dynamic_points_user
ON public.user_round_dynamic_points (user_id);

-- Index on betting_round_id for queries filtering primarily by round
CREATE INDEX IF NOT EXISTS idx_user_round_dynamic_points_round
ON public.user_round_dynamic_points (betting_round_id);

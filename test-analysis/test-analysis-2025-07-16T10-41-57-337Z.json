{
  "summary": {
    "total_tests": 937,
    "failing_tests": 25,
    "skipped_tests": 33,
    "passing_tests": 878,
    "success_rate": "93.70%",
    "generation_time": "2025-07-16T10:41:40.615Z"
  },
  "by_type": {
    "integration": {
      "failing": 21,
      "skipped": 33,
      "passing": 346
    },
    "unit": {
      "failing": 4,
      "skipped": 0,
      "passing": 532
    }
  },
  "by_component": {
    "api-routes": {
      "failing": 7,
      "skipped": 33,
      "passing": 110
    },
    "db": {
      "failing": 4,
      "skipped": 0,
      "passing": 5
    },
    "services": {
      "failing": 14,
      "skipped": 0,
      "passing": 180
    },
    "components": {
      "failing": 0,
      "skipped": 0,
      "passing": 114
    },
    "features": {
      "failing": 0,
      "skipped": 0,
      "passing": 29
    },
    "lib-utilities": {
      "failing": 0,
      "skipped": 0,
      "passing": 380
    },
    "utils": {
      "failing": 0,
      "skipped": 0,
      "passing": 46
    },
    "schemas": {
      "failing": 0,
      "skipped": 0,
      "passing": 14
    }
  },
  "by_error_category": {
    "Database": {
      "count": 20,
      "severity": "high",
      "tests": [
        {
          "file": "/src/app/api/hall-of-fame/stats/route.test.ts",
          "test": "should return aggregated stats with default parameters",
          "component": "api-routes"
        },
        {
          "file": "/src/app/api/hall-of-fame/route.test.ts",
          "test": "should return Hall of Fame data with default parameters",
          "component": "api-routes"
        },
        {
          "file": "/src/app/api/bets/route.test.ts",
          "test": "should return 200 OK on successful bet submission for an open round",
          "component": "api-routes"
        },
        {
          "file": "/src/app/api/bets/route.test.ts",
          "test": "should return 401 Unauthorized if user is not authenticated",
          "component": "api-routes"
        },
        {
          "file": "/src/app/api/bets/route.test.ts",
          "test": "should return 400 Bad Request if request body is not a valid array",
          "component": "api-routes"
        },
        {
          "file": "/src/app/api/bets/route.test.ts",
          "test": "should return 400 Bad Request if any submitted fixture is not in a betting round",
          "component": "api-routes"
        },
        {
          "file": "/tests/utils/db.test.ts",
          "test": "should result in empty tables after truncation",
          "component": "db"
        },
        {
          "file": "/tests/utils/db.test.ts",
          "test": "should seed test data successfully",
          "component": "db"
        },
        {
          "file": "/src/services/winnerDeterminationService.test.ts",
          "test": "should return existing winners if already determined integration",
          "component": "services"
        },
        {
          "file": "/src/services/winnerDeterminationService.test.ts",
          "test": "should determine single winner successfully integration",
          "component": "services"
        },
        {
          "file": "/src/services/winnerDeterminationService.test.ts",
          "test": "should handle individual season processing errors and continue with others integration",
          "component": "services"
        },
        {
          "file": "/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts",
          "test": "should calculate standings with proper ranking and tie handling",
          "component": "services"
        },
        {
          "file": "/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts",
          "test": "should handle invalid season ID gracefully",
          "component": "services"
        },
        {
          "file": "/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts",
          "test": "should handle null points values",
          "component": "services"
        },
        {
          "file": "/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts",
          "test": "should handle missing profile information",
          "component": "services"
        },
        {
          "file": "/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts",
          "test": "should sort users with same points consistently by username",
          "component": "services"
        },
        {
          "file": "/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts",
          "test": "should identify multiple tied winners",
          "component": "services"
        },
        {
          "file": "/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts",
          "test": "should return existing winners if already determined (idempotency)",
          "component": "services"
        },
        {
          "file": "/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts",
          "test": "should handle database error during winner recording",
          "component": "services"
        },
        {
          "file": "/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts",
          "test": "should handle all zero scores scenario (edge case)",
          "component": "services"
        }
      ]
    },
    "Unknown": {
      "count": 4,
      "severity": "low",
      "tests": [
        {
          "file": "/src/app/api/bets/route.test.ts",
          "test": "should return 403 Forbidden if kickoff time is in the past",
          "component": "api-routes"
        },
        {
          "file": "/tests/utils/db.test.ts",
          "test": "should create expected test data",
          "component": "db"
        },
        {
          "file": "/tests/utils/db.test.ts",
          "test": "should reset database without seeding when seed=false",
          "component": "db"
        },
        {
          "file": "/src/services/winnerDeterminationService.test.ts",
          "test": "should process multiple completed seasons successfully integration",
          "component": "services"
        }
      ]
    },
    "Type Error": {
      "count": 1,
      "severity": "medium",
      "tests": [
        {
          "file": "/src/services/winnerDeterminationService.test.ts",
          "test": "should handle tied winners correctly integration",
          "component": "services"
        }
      ]
    }
  },
  "by_severity": {
    "high": 20,
    "medium": 1,
    "low": 4
  },
  "failing_tests": [
    {
      "file": "/src/app/api/hall-of-fame/stats/route.test.ts",
      "test": "should return aggregated stats with default parameters",
      "component": "api-routes",
      "type": "integration",
      "error": "Error: Failed to seed test data: Failed to seed seasons: insert or update on table \"seasons\" violates foreign key constraint \"seasons_competition_id_f...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: Failed to seed test data: Failed to seed seasons: insert or update on table \"seasons\" violates foreign key constraint \"seasons_competition_id_fkey\"\n    at seedTestData (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:415:11)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:646:9"
    },
    {
      "file": "/src/app/api/hall-of-fame/route.test.ts",
      "test": "should return Hall of Fame data with default parameters",
      "component": "api-routes",
      "type": "integration",
      "error": "Error: Failed to seed test data: Failed to seed rounds: insert or update on table \"rounds\" violates foreign key constraint \"rounds_season_id_fkey\"...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: Failed to seed test data: Failed to seed rounds: insert or update on table \"rounds\" violates foreign key constraint \"rounds_season_id_fkey\"\n    at seedTestData (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:415:11)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Object.<anonymous> (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/app/api/hall-of-fame/route.test.ts:20:5)"
    },
    {
      "file": "/src/app/api/bets/route.test.ts",
      "test": "should return 200 OK on successful bet submission for an open round",
      "component": "api-routes",
      "type": "integration",
      "error": "Error: Failed to seed test data: Failed to seed seasons: insert or update on table \"seasons\" violates foreign key constraint \"seasons_competition_id_f...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: Failed to seed test data: Failed to seed seasons: insert or update on table \"seasons\" violates foreign key constraint \"seasons_competition_id_fkey\"\n    at seedTestData (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:415:11)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:646:9"
    },
    {
      "file": "/src/app/api/bets/route.test.ts",
      "test": "should return 401 Unauthorized if user is not authenticated",
      "component": "api-routes",
      "type": "integration",
      "error": "Error: Failed to seed test data: Failed to seed betting round fixtures: insert or update on table \"betting_round_fixtures\" violates foreign key constr...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: Failed to seed test data: Failed to seed betting round fixtures: insert or update on table \"betting_round_fixtures\" violates foreign key constraint \"betting_round_fixtures_fixture_id_fkey\"\n    at seedTestData (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:415:11)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Object.<anonymous> (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/app/api/bets/route.test.ts:63:5)"
    },
    {
      "file": "/src/app/api/bets/route.test.ts",
      "test": "should return 400 Bad Request if request body is not a valid array",
      "component": "api-routes",
      "type": "integration",
      "error": "Error: Failed to create test profiles: Failed to create test profiles: insert or update on table \"profiles\" violates foreign key constraint \"profiles_...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: Failed to create test profiles: Failed to create test profiles: insert or update on table \"profiles\" violates foreign key constraint \"profiles_id_fkey\"\n    at createTestProfiles (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:604:11)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Object.<anonymous> (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/app/api/bets/route.test.ts:68:5)"
    },
    {
      "file": "/src/app/api/bets/route.test.ts",
      "test": "should return 403 Forbidden if kickoff time is in the past",
      "component": "api-routes",
      "type": "integration",
      "error": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m...",
      "error_category": "Unknown",
      "error_severity": "low",
      "error_patterns": [],
      "full_error": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m403\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at Object.toBe (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/app/api/bets/route.test.ts:185:29)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
    },
    {
      "file": "/src/app/api/bets/route.test.ts",
      "test": "should return 400 Bad Request if any submitted fixture is not in a betting round",
      "component": "api-routes",
      "type": "integration",
      "error": "Error: Failed to create test profiles: Failed to update test profiles: insert or update on table \"profiles\" violates foreign key constraint \"profiles_...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: Failed to create test profiles: Failed to update test profiles: insert or update on table \"profiles\" violates foreign key constraint \"profiles_id_fkey\"\n    at createTestProfiles (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:604:11)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Object.<anonymous> (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/app/api/bets/route.test.ts:68:5)"
    },
    {
      "file": "/tests/utils/db.test.ts",
      "test": "should result in empty tables after truncation",
      "component": "db",
      "type": "unit",
      "error": "Error: Failed to seed test data: Failed to seed betting round fixtures: insert or update on table \"betting_round_fixtures\" violates foreign key constr...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: Failed to seed test data: Failed to seed betting round fixtures: insert or update on table \"betting_round_fixtures\" violates foreign key constraint \"betting_round_fixtures_fixture_id_fkey\"\n    at seedTestData (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:415:11)\n    at Object.<anonymous> (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.test.ts:56:7)"
    },
    {
      "file": "/tests/utils/db.test.ts",
      "test": "should seed test data successfully",
      "component": "db",
      "type": "unit",
      "error": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mresolves\u001b[2m.\u001b[22mnot\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mresolves\u001b[2m.\u001b[22mnot\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived promise rejected instead of resolved\nRejected to value: \u001b[31m[Error: Failed to seed test data: Failed to seed betting round fixtures: insert or update on table \"betting_round_fixtures\" violates foreign key constraint \"betting_round_fixtures_betting_round_id_fkey\"]\u001b[39m\n    at expect (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/node_modules/expect/build/index.js:113:15)\n    at Object.expect (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.test.ts:83:13)\n    at Promise.then.completed (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/node_modules/jest-runner/build/testWorker.js:106:12)"
    },
    {
      "file": "/tests/utils/db.test.ts",
      "test": "should create expected test data",
      "component": "db",
      "type": "unit",
      "error": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m...",
      "error_category": "Unknown",
      "error_severity": "low",
      "error_patterns": [],
      "full_error": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"FT\"\u001b[39m\nReceived: \u001b[31m\"NS\"\u001b[39m\n    at Object.toBe (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.test.ts:105:42)"
    },
    {
      "file": "/tests/utils/db.test.ts",
      "test": "should reset database without seeding when seed=false",
      "component": "db",
      "type": "unit",
      "error": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m...",
      "error_category": "Unknown",
      "error_severity": "low",
      "error_patterns": [],
      "full_error": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m0\u001b[39m\nReceived: \u001b[31m1\u001b[39m\n    at Object.toBe (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.test.ts:130:36)"
    },
    {
      "file": "/src/services/winnerDeterminationService.test.ts",
      "test": "should return existing winners if already determined integration",
      "component": "services",
      "type": "integration",
      "error": "Error: Failed to create test profiles: Failed to create test profiles: insert or update on table \"profiles\" violates foreign key constraint \"profiles_...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: Failed to create test profiles: Failed to create test profiles: insert or update on table \"profiles\" violates foreign key constraint \"profiles_id_fkey\"\n    at createTestProfiles (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:604:11)\n    at Object.<anonymous> (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/services/winnerDeterminationService.test.ts:120:7)"
    },
    {
      "file": "/src/services/winnerDeterminationService.test.ts",
      "test": "should determine single winner successfully integration",
      "component": "services",
      "type": "integration",
      "error": "Error: Failed to create test profiles: Failed to create test profiles: insert or update on table \"profiles\" violates foreign key constraint \"profiles_...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: Failed to create test profiles: Failed to create test profiles: insert or update on table \"profiles\" violates foreign key constraint \"profiles_id_fkey\"\n    at createTestProfiles (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:604:11)\n    at setupStandingsTestData (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/services/winnerDeterminationService.test.ts:54:5)\n    at Object.<anonymous> (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/services/winnerDeterminationService.test.ts:147:28)"
    },
    {
      "file": "/src/services/winnerDeterminationService.test.ts",
      "test": "should handle tied winners correctly integration",
      "component": "services",
      "type": "integration",
      "error": "TypeError: Cannot read properties of undefined (reading 'id')...",
      "error_category": "Type Error",
      "error_severity": "medium",
      "error_patterns": [
        "type_error"
      ],
      "full_error": "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/services/winnerDeterminationService.test.ts:191:61)"
    },
    {
      "file": "/src/services/winnerDeterminationService.test.ts",
      "test": "should process multiple completed seasons successfully integration",
      "component": "services",
      "type": "integration",
      "error": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m...",
      "error_category": "Unknown",
      "error_severity": "low",
      "error_patterns": [],
      "full_error": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m2\u001b[39m\nReceived length: \u001b[31m3\u001b[39m\nReceived array:  \u001b[31m[{\"competition_type\": \"league\", \"created_at\": \"2025-07-16T10:41:50.504328+00:00\", \"dynamic_points\": 5, \"game_points\": 60, \"id\": 578, \"league_id\": 1, \"season_id\": 1, \"total_points\": 65, \"user_id\": \"82e9b973-9c58-4cea-99ea-385d3ed7a065\"}, {\"competition_type\": \"last_round_special\", \"created_at\": \"2025-07-16T10:41:50.596737+00:00\", \"dynamic_points\": 0, \"game_points\": 0, \"id\": 580, \"league_id\": 1, \"season_id\": 1, \"total_points\": 30, \"user_id\": \"62fd0bf1-48b8-4f65-8c95-5433dcbea79e\"}, {\"competition_type\": \"league\", \"created_at\": \"2025-07-16T10:41:50.590541+00:00\", \"dynamic_points\": 5, \"game_points\": 60, \"id\": 579, \"league_id\": 1, \"season_id\": 2, \"total_points\": 65, \"user_id\": \"82e9b973-9c58-4cea-99ea-385d3ed7a065\"}]\u001b[39m\n    at Object.toHaveLength (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/services/winnerDeterminationService.test.ts:324:26)"
    },
    {
      "file": "/src/services/winnerDeterminationService.test.ts",
      "test": "should handle individual season processing errors and continue with others integration",
      "component": "services",
      "type": "integration",
      "error": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m0\u001b[39m\nReceived length: \u001b[31m1\u001b[39m\nReceived array:  \u001b[31m[[Error: insert or update on table \"season_winners\" violates foreign key constraint \"season_winners_season_id_fkey\"]]\u001b[39m\n    at Object.toHaveLength (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/services/winnerDeterminationService.test.ts:361:33)"
    },
    {
      "file": "/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts",
      "test": "should calculate standings with proper ranking and tie handling",
      "component": "services",
      "type": "integration",
      "error": "Error: Failed to seed test data: Failed to seed seasons: insert or update on table \"seasons\" violates foreign key constraint \"seasons_competition_id_f...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: Failed to seed test data: Failed to seed seasons: insert or update on table \"seasons\" violates foreign key constraint \"seasons_competition_id_fkey\"\n    at seedTestData (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:415:11)\n    at /Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:646:9"
    },
    {
      "file": "/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts",
      "test": "should handle invalid season ID gracefully",
      "component": "services",
      "type": "integration",
      "error": "Error: Failed to create test profiles: Failed to create test profiles: insert or update on table \"profiles\" violates foreign key constraint \"profiles_...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: Failed to create test profiles: Failed to create test profiles: insert or update on table \"profiles\" violates foreign key constraint \"profiles_id_fkey\"\n    at createTestProfiles (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:604:11)\n    at setupCupStandingsTestData (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts:55:5)\n    at Object.<anonymous> (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts:138:7)"
    },
    {
      "file": "/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts",
      "test": "should handle null points values",
      "component": "services",
      "type": "integration",
      "error": "Error: Failed to seed test data: Failed to seed betting round fixtures: insert or update on table \"betting_round_fixtures\" violates foreign key constr...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: Failed to seed test data: Failed to seed betting round fixtures: insert or update on table \"betting_round_fixtures\" violates foreign key constraint \"betting_round_fixtures_betting_round_id_fkey\"\n    at seedTestData (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:415:11)\n    at /Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:646:9"
    },
    {
      "file": "/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts",
      "test": "should handle missing profile information",
      "component": "services",
      "type": "integration",
      "error": "Error: Failed to seed test data: Failed to seed betting round fixtures: insert or update on table \"betting_round_fixtures\" violates foreign key constr...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: Failed to seed test data: Failed to seed betting round fixtures: insert or update on table \"betting_round_fixtures\" violates foreign key constraint \"betting_round_fixtures_betting_round_id_fkey\"\n    at seedTestData (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:415:11)\n    at /Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:646:9"
    },
    {
      "file": "/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts",
      "test": "should sort users with same points consistently by username",
      "component": "services",
      "type": "integration",
      "error": "Error: Failed to create cup points: insert or update on table \"user_last_round_special_points\" violates foreign key constraint \"user_last_round_specia...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: Failed to create cup points: insert or update on table \"user_last_round_special_points\" violates foreign key constraint \"user_last_round_special_points_betting_round_id_fkey\"\n    at Object.<anonymous> (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts:214:15)"
    },
    {
      "file": "/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts",
      "test": "should identify multiple tied winners",
      "component": "services",
      "type": "integration",
      "error": "Error: Failed to seed test data: Failed to seed fixtures: insert or update on table \"fixtures\" violates foreign key constraint \"fixtures_away_team_id_...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: Failed to seed test data: Failed to seed fixtures: insert or update on table \"fixtures\" violates foreign key constraint \"fixtures_away_team_id_fkey\"\n    at seedTestData (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:415:11)\n    at /Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:646:9"
    },
    {
      "file": "/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts",
      "test": "should return existing winners if already determined (idempotency)",
      "component": "services",
      "type": "integration",
      "error": "Error: Failed to create test profiles: Failed to create test profiles: insert or update on table \"profiles\" violates foreign key constraint \"profiles_...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: Failed to create test profiles: Failed to create test profiles: insert or update on table \"profiles\" violates foreign key constraint \"profiles_id_fkey\"\n    at createTestProfiles (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:604:11)\n    at setupCupStandingsTestData (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts:55:5)\n    at Object.<anonymous> (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts:303:7)"
    },
    {
      "file": "/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts",
      "test": "should handle database error during winner recording",
      "component": "services",
      "type": "integration",
      "error": "Error: Failed to create test profiles: Failed to create test profiles: insert or update on table \"profiles\" violates foreign key constraint \"profiles_...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: Failed to create test profiles: Failed to create test profiles: insert or update on table \"profiles\" violates foreign key constraint \"profiles_id_fkey\"\n    at createTestProfiles (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:604:11)\n    at setupCupStandingsTestData (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts:55:5)\n    at Object.<anonymous> (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts:359:7)"
    },
    {
      "file": "/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts",
      "test": "should handle all zero scores scenario (edge case)",
      "component": "services",
      "type": "integration",
      "error": "Error: Failed to create test profiles: Failed to create test profiles: insert or update on table \"profiles\" violates foreign key constraint \"profiles_...",
      "error_category": "Database",
      "error_severity": "high",
      "error_patterns": [
        "database"
      ],
      "full_error": "Error: Failed to create test profiles: Failed to create test profiles: insert or update on table \"profiles\" violates foreign key constraint \"profiles_id_fkey\"\n    at createTestProfiles (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/tests/utils/db.ts:604:11)\n    at Object.<anonymous> (/Users/arnarjohannsson/Code/TippSlottet/league-coupon/src/services/cup/__tests__/cupWinnerDeterminationService.test.ts:374:7)"
    }
  ],
  "skipped_tests": [
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should reject requests without authentication",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should accept Bearer token authentication",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should accept X-Cron-Secret header authentication",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should reject invalid authentication tokens",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should handle missing CRON_SECRET configuration",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should return Hall of Fame data with default parameters",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should handle filters correctly",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should enforce maximum limit",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should create a new Hall of Fame entry",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should update existing winner when override_existing is true",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should reject when winner already exists without override",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should validate required fields",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should handle non-existent season",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should handle non-existent user",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should delete winner by winner_id",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should delete winner by season_id",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should require either winner_id or season_id",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should handle non-existent winner",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should handle delete errors",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should handle database errors in GET",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should handle unexpected errors",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/admin/hall-of-fame/route.test.ts",
      "test": "should log successful operations",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/last-round-special/standings/route.test.ts",
      "test": "should return cup standings with default pagination",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/last-round-special/standings/route.test.ts",
      "test": "should return cup standings with custom pagination",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/last-round-special/standings/route.test.ts",
      "test": "should handle custom sorting by points descending",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/last-round-special/standings/route.test.ts",
      "test": "should handle specific season filter",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/last-round-special/standings/route.test.ts",
      "test": "should return empty results when no standings data exists",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/last-round-special/standings/route.test.ts",
      "test": "should handle profile fetch errors gracefully",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/last-round-special/standings/route.test.ts",
      "test": "should handle invalid sort parameter",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/last-round-special/standings/route.test.ts",
      "test": "should handle cup scoring service errors",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/last-round-special/standings/route.test.ts",
      "test": "should include proper cache headers",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/last-round-special/standings/route.test.ts",
      "test": "should validate pagination limits",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    },
    {
      "file": "/src/app/api/last-round-special/standings/route.test.ts",
      "test": "should include metadata and query info in response",
      "component": "api-routes",
      "type": "integration",
      "reason": "Test skipped or not implemented"
    }
  ]
}